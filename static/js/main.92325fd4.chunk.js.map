{"version":3,"sources":["App.js","index.js"],"names":["App","state","displayValue","prevValue","waitingforOperand","waitingtoCompute","operator","inputChange","bind","inputNumber","toggleSign","inputDot","clearDisplay","inputPercent","inputOperator","performOperation","this","setState","prevState","event","num","operatorValue","String","target","value","indexOf","length","charAt","substring","Number","parseFloat","className","type","readOnly","onChange","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92325fd4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      displayValue: '0',\n      prevValue: null,\n      waitingforOperand: false,\n      waitingtoCompute: false,\n      operator: null,\n    }\n\n    this.inputChange = this.inputChange.bind(this);\n    this.inputNumber = this.inputNumber.bind(this);\n    this.toggleSign = this.toggleSign.bind(this);\n    this.inputDot = this.inputDot.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n    this.inputPercent = this.inputPercent.bind(this);\n    this.inputOperator = this.inputOperator.bind(this);\n    this.performOperation = this.performOperation.bind(this);\n  }  \n\n  clearDisplay(){\n    this.setState(prevState => ({\n      displayValue: '0',\n      operator: null,\n      prevValue: null,\n      waitingforOperand: false\n    }))\n  }\n\n  inputChange(){\n    this.setState(prevState => ({\n      displayValue: prevState.displayValue\n    }))\n  }\n\n  inputNumber(event){\n    const {waitingforOperand, operator, displayValue, prevValue, operatorValue} = this.state;\n    let num = String(event.target.value);\n\n    if (waitingforOperand) {\n      //alert('waitingforOperand')\n      this.setState( prevState => ({\n        prevValue: String(displayValue),\n        displayValue: '',\n        waitingforOperand: false,\n        waitingtoCompute: true\n      }))\n    } \n\n    //check if both preValue and display are both numbers if so then waitingforOperand is false\n    /* if (operator) {\n      if(typeof Number(prevValue) === 'number' && typeof Number(displayValue) === 'number') {\n        //alert('both')\n        this.setState(prevState => ({\n          displayValue: alert(),\n          waitingforOperand: true\n        }))\n      }\n    } */\n    \n    this.setState(prevState => ({\n      displayValue: prevState.displayValue === \"0\" ? String(num) : prevState.displayValue + String(num)\n    }));\n    \n\n    \n  }\n\n  //logic for the dot and when the plus sign is clcked again for equal\n  inputDot() {\n    const {displayValue, waitingforOperand} = this.state;\n\n    if(waitingforOperand){\n      this.setState(prevState => ({\n        displayValue: '.',\n        waitingforOperand: false\n      }))\n    } else if(displayValue.indexOf('.') === -1) {\n        this.setState(prevState => ({\n          displayValue: displayValue !==\"0\" ? prevState.displayValue + '.' : displayValue + '.'\n        }))\n    }\n  }\n\n  toggleSign(){\n    const {displayValue} = this.state;\n\n    if(displayValue === '0' && displayValue.length === 1){\n      this.setState( prevState => ({\n          displayValue: \"0\"\n      }))\n    } else {\n      this.setState(prevState => ({\n        displayValue: prevState.displayValue.charAt(0) === '-' ? prevState.displayValue.substring(1) : '-' + prevState.displayValue\n      }))\n    }\n  }\n\n  inputPercent() {\n    const {displayValue} = this.state;\n    const value = Number.parseFloat(displayValue/ 100);\n    this.setState(prevState => ({\n      displayValue: String(value)\n    }))\n  }\n\n  inputOperator(event) {\n    const {displayValue, operator, waitingforOperand, prevValue} = this.state;\n    const operatorValue = event.target.value;\n\n    this.setState( prevState => ({\n      operator: operatorValue,\n      waitingforOperand: true,\n      waitingtoCompute: false\n    }))\n\n    //checking if the preValue is not null\n    if(prevValue !== null){\n      //alert()\n      if(operator === \"/\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) / Number(displayValue)),\n          prevValue: null,\n          operator: null\n        }))\n      }\n\n      if(operator === \"*\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) * Number(displayValue)),\n          prevValue: null,\n          operator: null\n        }))\n      }\n      if(operator === \"-\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) - Number(displayValue)),\n          prevValue: null,\n          operator: null\n        }))\n      }\n      if(operator === \"+\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) + Number(displayValue)),\n          prevValue: null,\n          operator: null\n        }))\n      }\n      \n    }\n  }\n\n  performOperation() {\n    const {waitingtoCompute, waitingforOperand, displayValue, operator, prevValue} = this.state;\n\n    if (waitingtoCompute) {\n      if(operator === \"/\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) / Number(displayValue)),\n          prevValue: null\n        }))\n      }\n\n      if(operator === \"*\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) * Number(displayValue)),\n          prevValue: null\n        }))\n      }\n      if(operator === \"-\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) - Number(displayValue)),\n          prevValue: null\n        }))\n      }\n      if(operator === \"+\") {\n        this.setState( prevState => ({\n          displayValue: String(Number(prevValue) + Number(displayValue)),\n          prevValue: null\n        }))\n      }\n    }\n  }\n  \n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n        <form className=\"form-container\">\n            <input type=\"text\" readOnly=\"disable\" className=\"result\" value={this.state.displayValue} onChange={this.inputChange}></input>\n            <input type=\"button\" className=\"top-function\" value=\"AC\" onClick={this.clearDisplay}/>\n            <input type=\"button\" className=\"top-function\" value=\"+/-\" onClick={this.toggleSign} />\n            <input type=\"button\" className=\"top-function\" value=\"%\" onClick={this.inputPercent}/>\n            <input type=\"button\" className=\"side-function\" value=\"/\" onClick={this.inputOperator}/>\n            <input type=\"button\" className=\"number-button\" value=\"7\"  onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\"8\" onClick={this.inputNumber} />\n            <input type=\"button\" className=\"number-button\" value=\"9\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"side-function\" value=\"*\" onClick={this.inputOperator}/>\n            <input type=\"button\" className=\"number-button\" value=\"4\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\"5\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\"6\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"side-function\" value=\"-\" onClick={this.inputOperator}/>\n            <input type=\"button\" className=\"number-button\" value=\"1\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\"2\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\"3\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"side-function\" value=\"+\" onClick={this.inputOperator}/>\n            <input type=\"button\" value=\"0\" className=\"zero-span\" onClick={this.inputNumber}/>\n            <input type=\"button\" className=\"number-button\" value=\".\" onClick={this.inputDot}/>\n            <input type=\"button\" className=\"side-function\" value=\"=\" onClick={this.performOperation}/>\n        </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}